//https://practice.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1/#


bool dfs(int i,vector<int> adj[],vector<bool> &visited,int par,vector<bool> &visdfs)
  {
      visited[i]=true;
      visdfs[i]=true;
      for(auto c: adj[i])
      {
          if(c==i) return true;
          if(!visited[c])
          {
              if(dfs(c,adj,visited,i,visdfs)) return true;
          }
     //     else if(visited[c]) return true;
         else if(visdfs[c]) return true;
  //        else if(visited[c] and par!=c) return true;
   //        else if(visited[c] and par==c ) return true;
    //  return true;
 //   visited[c]=false;
         
           
      }
      visdfs[i]=false;
      return false;
  }
  
  
  
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        vector<bool> visited(V,false);
        vector<bool> visdfs(V,false);
        for(int i=0;i<V;i++)
        {
            if(!visited[i])
            {
                if(dfs(i,adj,visited,-1,visdfs)) return true;
            }
        }
        return false;
    }
